/*! d3to3 2015-05-15 */
var d3to3=function(){function a(){}function b(a){var b=a.toString(16);return 1==b.length?"0"+b:b}var c={},d={};c.loaded=!1,c.model={axis:{x:[],y:[]},content:[],canvas:{width:null,height:null}},observerFactory=new a,c.initializer={init:function(){"undefined"!=typeof d3&&window.WebGLRenderingContext&&document.createElement("canvas").getContext("webgl")&&(d=Object.create(d3),c.loaded=!0)}}.init(),c.scale={},c.svg={},c.layout={},c.event={},c.behavior={},c.geo={},c.geom={},c.ns=d3.ns,c.format=d3.format,c.random=d3.random,c.interpolators=d3.interpolators,c.svg.symbolTypes=d3.svg.symbolTypes,c.init=function(){var a=d.selection.prototype.selectAll,b=d.selection.prototype.select,e=d.selection.prototype.data,f=d.selection.prototype.attr;hook_classed=d.selection.prototype.classed,hook_style=d.selection.prototype.style,hook_property=d.selection.prototype.property,hook_text=d.selection.prototype.text,hook_html=d.selection.prototype.html,hook_append=d.selection.prototype.append,hook_insert=d.selection.prototype.insert,hook_remove=d.selection.prototype.remove,hook_datum=d.selection.prototype.datum,hook_filter=d.selection.prototype.filter,hook_order=d.selection.prototype.order,hook_sort=d.selection.prototype.sort,hook_each=d.selection.prototype.each,hook_call=d.selection.prototype.call,hook_empty=d.selection.prototype.empty,hook_node=d.selection.prototype.node,hook_size=d.selection.prototype.size,hook_enter_append=d.selection.enter.prototype.append,hook_enter_empty=d.selection.enter.prototype.empty,hook_enter_node=d.selection.enter.prototype.node,hook_enter_call=d.selection.enter.prototype.call,hook_enter_select=d.selection.enter.prototype.select,hook_enter_insert=d.selection.enter.prototype.insert,hook_enter_size=d.selection.enter.prototype.size,d.selection.enter.prototype.empty=function(){return hook_enter_empty.apply(this,arguments)},d.selection.enter.prototype.node=function(){return hook_enter_node.apply(this,arguments)},d.selection.enter.prototype.call=function(){return hook_enter_call.apply(this,arguments)},d.selection.enter.prototype.select=function(){return hook_enter_select.apply(this,arguments)},d.selection.enter.prototype.insert=function(){return hook_enter_insert.apply(this,arguments)},d.selection.enter.prototype.size=function(){return hook_enter_size.apply(this,arguments)},d.selection.prototype.selectAll=function(){return a.apply(this,arguments)},d.selection.prototype.select=function(){return b.apply(this,arguments)},d.selection.prototype.classed=function(){return hook_classed.apply(this,arguments)},d.selection.prototype.style=function(){return hook_style.apply(this,arguments)},d.selection.prototype.property=function(){return hook_property.apply(this,arguments)},d.selection.prototype.text=function(){return hook_text.apply(this,arguments)},d.selection.prototype.html=function(){return hook_html.apply(this,arguments)},d.selection.prototype.insert=function(){return hook_insert.apply(this,arguments)},d.selection.prototype.remove=function(){return hook_remove.apply(this,arguments)},d.selection.prototype.datum=function(){return hook_datum.apply(this,arguments)},d.selection.prototype.filter=function(){return hook_filter.apply(this,arguments)},d.selection.prototype.order=function(){return hook_order.apply(this,arguments)},d.selection.prototype.sort=function(){return hook_sort.apply(this,arguments)},d.selection.prototype.call=function(){return hook_call.apply(this,arguments)},d.selection.prototype.empty=function(){return hook_empty.apply(this,arguments)},d.selection.prototype.node=function(){return hook_node.apply(this,arguments)},d.selection.prototype.size=function(){return hook_size.apply(this,arguments)},d.selection.enter.prototype.append=function(){console.log("---------------------------- ENTER ----------------------------");hook_append.apply(this,arguments);return"circle"==arguments[0]&&observerFactory.observe(observerFactory.type("each").expectKeyType(typeof[]).then(function(a){[].forEach.call(a,function(a){c.model.content.push(a)})})),hook_enter_append.apply(this,arguments)},d.selection.prototype.each=function(){var a=hook_each.apply(this,arguments);return observerFactory.notify({type:"each",keyType:typeof[],value:a[0]}),hook_each.apply(this,arguments)},d.selection.prototype.data=function(){return e.apply(this,arguments)},c.scale.linear=function(){return d.scale.linear()},c.scale.linear.range=function(a,b,c){return d.range(a,b,c)},d.selection.prototype.attr=function(){return observerFactory.notify({type:"attr",key:arguments[0],value:arguments[1]}),f.apply(this,arguments)},c.svg.axis=function(){return d.svg.axis()},c.select=function(a){return console.log("---------------------------- SELECT ----------------------------"),d.select(a)},d.selection.prototype.append=function(){return console.log("---------------------------- APPEND ----------------------------"),"svg"===arguments[0]&&observerFactory.observe(observerFactory.type("attr").expectKey("width").then(function(a){c.model.canvas.width=a}),observerFactory.type("attr").expectKey("height").then(function(a){c.model.canvas.height=a})),hook_append.apply(this,arguments)}},c.min=function(a,b){return d.min(a,b)},c.max=function(a,b){return d.max(a,b)},c.sum=function(a,b){return d.sum(a,b)},c.extend=function(a,b){return d.extend(a,b)},c.mean=function(a,b){return d.mean(a,b)},c.extend=function(a,b){return d.extend(a,b)},c.ascending=function(a,b){return d.ascending(a,b)},c.descending=function(a,b){return d.descending(a,b)},c.quantile=function(a,b){return d.quantile(a,b)},c.median=function(a,b){return d.median(a,b)},c.variance=function(a,b){return d.variance(a,b)},c.deviation=function(a,b){return d.deviation(a,b)},c.bisectLeft=function(a,b,c,e){return d.bisectLeft(a,b,c,e)},c.bisectRight=function(a,b,c,e){return d.bisectRight(a,b,c,e)},c.bisector=function(a){return d.bisector(a)},c.shuffle=function(a,b,c){return d.shuffle(a,b,c)},c.pairs=function(a){return d.pairs(a)},c.permute=function(a,b){return d.permute(a,b)},c.zip=function(){return d.zip()},c.transpose=function(a){return d.transpose(a)},c.keys=function(a){return d.keys(a)},c.values=function(a){return d.values(a)},c.entries=function(a){return d.entries(a)},c.map=function(a,b){return d.map(a,b)},c.nest=function(){return d.nest()},c.set=function(a){return d.set(a)},c.rebind=function(a,b){return d.rebind(a,b)},c.dispatch=function(){return d.dispatch()},c.requote=function(a){return d.requote(a)},c.selection=function(){return d.selection()},c.mouse=function(a){return d.mouse(a)},c.touch=function(a){return d.touch(a)},c.color=function(){return d.color()},c.hsl=function(a,b,c){return d.color(a,b,c)},c.hcl=function(a,b,c){return d.hcl(a,b,c)},c.lab=function(a,b,c){return d.lab(a,b,c)},c.rgb=function(a,b,c){return d.rgb(a,b,c)},c.geo.area=function(a){return d.geo.area(a)},c.geo.bounds=function(){return d.geo.bounds()},c.geo.centroid=function(a){return d.geo.centroid(a)},c.geo.clipExtent=function(){return d.geo.clipExtent()},c.geo.conicEqualArea=function(){return d.geo.conicEqualArea()},c.geo.albers=function(){return d.geo.albers()},c.geo.albersUsa=function(){return d.geo.albersUsa()},c.geo.path=function(){return d.geo.path()},c.geo.transform=function(a){return d.geo.transform(a)},c.geo.projection=function(a){return d.geo.projection(a)},c.geo.equirectangular=function(){return d.geo.equirectangular()},c.geo.rotation=function(a){return d.geo.rotation(a)},c.geo.circle=function(){return d.geo.circle()},c.geo.distance=function(a,b){return d.geo.distance(a,b)},c.geo.graticule=function(){return d.geo.graticule()},c.geo.greatArc=function(){return d.geo.greatArc()},c.geo.length=function(a){return d.geo.length(a)},c.geo.azimuthalEqualArea=function(){return d.geo.azimuthalEqualArea()},c.geo.azimuthalEquidistant=function(){return d.geo.azimuthalEquidistant()},c.geo.conicConformal=function(){return d.geo.conicConformal()},c.geo.conicEquidistant=function(){return d.geo.conicEquidistant()},c.geo.gnomonic=function(){return d.geo.gnomonic()},c.geo.mercator=function(){return d.geo.mercator()},c.geo.orthographic=function(){return d.geo.orthographic()},c.geo.stereographic=function(){return d.geo.stereographic()},c.geo.transverseMercator=function(){return d.geo.transverseMercator()},c.geo.stream=function(a,b){return d.geo.stream(a,b)},c.geo.interpolate=function(a,b){return d.geo.interpolate(a,b)},c.geo.projectionMutator=function(a){return d.geo.projectionMutator(a)},c.geom.hull=function(a){return d.geom.hull(a)},c.geom.polygon=function(a){return d.geom.polygon(a)},c.geom.voronoi=function(a){return d.geom.voronoi(a)},c.geom.delaunay=function(a){return d.geom.delaunay(a)},c.geom.quadtree=function(a,b,c,e,f){return d.geom.quadtree(a,b,c,e,f)},c.behavior.drag=function(){return d.behavior.drag()},c.functor=function(a){return d.functor(a)},c.xhr=function(a){return d.xhr(a)},c.dsv=function(a,b){return d.dsv(a,b)},c.csv=function(a,b){return d.csv(a,b)},c.tsv=function(a,b){return d.tsv(a,b)},c.touches=function(a,b){return d.touches(a,b)},c.interpolateZoom=function(a,b){return d.interpolateZoom(a,b)},c.behavior.zoom=function(){return d.behavior.zoom()},c.timer=function(a,b,c){return d.timer(a,b,c)},c.timer.flush=function(){return d.timer.flush()},c.round=function(a,b){return d.round(a,b)},c.formatPrefix=function(a,b){return d.formatPrefix(a,b)},c.locale=function(a){return d.locale(a)},c.interpolateRgb=function(a,b){return d.interpolateRgb(a,b)},c.interpolateObject=function(a,b){return d.interpolateObject(a,b)},c.interpolateRgbNumber=function(a,b){return d.interpolateRgbNumber(a,b)},c.interpolateString=function(a,b){return d.interpolateString(a,b)},c.interpolate=function(a,b){return d.interpolate(a,b)},c.interpolateArray=function(a,b){return d.interpolateArray(a,b)},c.ease=function(a){return d.ease(a)},c.interpolateHcl=function(a,b){return d.interpolateHcl(a,b)},c.interpolateHsl=function(a,b){return d.interpolateHsl(a,b)},c.interpolateLab=function(a,b){return d.interpolateLab(a,b)},c.interpolateRound=function(a,b){return d.interpolateRound(a,b)},c.interpolateTransform=function(a,b){return d.interpolateTransform(a,b)},c.transform=function(a){return d.transform(a)},c.transition=function(a,b){return d.transition(a,b)},c.scale.category10=function(){return d.scale.category10()},c.scale.category20=function(){return d.scale.category20()},c.scale.category20b=function(){return d.scale.category20b()},c.scale.category20c=function(){return d.scale.category20c()},c.scale.sqrt=function(){return d.scale.sqrt()},c.scale.pow=function(){return d.scale.pow()},c.scale.quantile=function(){return d.scale.quantile()},c.scale.threshold=function(){return d.scale.threshold()},c.scale.ordinal=function(){return d.scale.ordinal()},c.scale.log=function(){return d.scale.log()},c.layout.bundle=function(){return d.layout.bundle()},c.layout.chord=function(){return d.layout.chord()},c.layout.force=function(){return d.layout.force()},c.layout.hierarchy=function(){return d.layout.hierarchy()},c.layout.partition=function(){return d.layout.partition()},c.layout.pie=function(){return d.layout.pie()},c.layout.stack=function(){return d.layout.stack()},c.layout.histogram=function(){return d.layout.histogram()},c.layout.pack=function(){return d.layout.pack()},c.layout.tree=function(){return d.layout.tree()},c.layout.treemap=function(){return d.layout.treemap()},c.layout.cluster=function(){return d.layout.cluster()},c.svg.arc=function(){return d.svg.arc()},c.svg.line=function(){return d.svg.line()},c.svg.brush=function(){return d.svg.brush()},c.svg.area=function(){return d.svg.area()},c.svg.area.radial=function(){return d.svg.area.radial()},c.svg.radial=function(){return d.svg.radial()},c.svg.chord=function(){return d.svg.chord()},c.svg.diagonal=function(){return d.svg.diagonal()},c.svg.diagonal.radial=function(){return d.svg.diagonal.radial()},c.svg.sumbol=function(){return d.svg.sumbol()},c.text=function(a){return d.text(a)},c.xml=function(a){return d.xml(a)},c.json=function(a,b){return d.json(a,b)},c.html=function(a,b){return d.html(a,b)},c.to3D=function(a){function b(){function a(a,b,c,d){var e=(new THREE.MeshBasicMaterial({color:d}),new THREE.CircleGeometry(c,64)),f=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));f.position.set(a,b,0),group.add(f)}console.log(c.model.content),c.model.content.forEach(function(b){var d=b.r.baseVal.value,f=b.cx.baseVal.value,g=b.cy.baseVal.value;color=e(b.style.cssText.slice(10));var h,i;h=f<=c.model.canvas.width?-(c.model.canvas.width/2-f):c.model.canvas.width/2-f,i=g<=c.model.canvas.height?c.model.canvas.height/2-g:-(c.model.canvas.height/2-g),console.log("ADDING CIRCLE"),console.log(f),console.log(g),console.log("----------"),console.log(h),console.log(i),console.log(d),console.log(color),a(h,i,d,color)}),h.position.set(0,0,100),group.position.set(0,0,0),scene.add(h),scene.add(group),renderer.setClearColor(16777215),renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(c.model.canvas.width||window.innerWidth,c.model.canvas.height||window.innerHeight),g.appendChild(renderer.domElement),renderer.render(scene,h)}function d(){requestAnimationFrame(d),f()}function f(){renderer.render(scene,h)}var g,h,h=new THREE.PerspectiveCamera(115,(c.model.canvas.width||window.innerWidth)/(c.model.canvas.height||window.innerHeight),1,1e3);renderer=new THREE.WebGLRenderer({antialias:!0}),scene=new THREE.Scene,group=new THREE.Group,function(){var a=function(){},b=function(){};a(),b()}(),g=document.getElementById("custom_panel"),b(),d()},a.queue=[],a.prototype.observe=function(){return[].forEach.call(arguments,function(b){b&&a.queue.push(b)}),this},a.prototype.then=function(a){return this.callback=a||{},this},a.prototype.expectKeyType=function(a){return this.expectedType=a,this},a.prototype.expectKey=function(a){return this.expectedKey=a,this},a.prototype.type=function(b){var c=b;return"function"!=typeof a[c],"function"!=typeof a[c].prototype.drive&&(a[c].prototype=new a),new a[c]},a.attr=function(){this.type="attr",this.expectedKey=null},a.each=function(){this.type="each",this.expectedKey=null},a.prototype.notify=function(b){var c=b.key||{},d=b.keyType||{},e=b.value||{},f=b.type||{};a.hasOwnProperty(f)&&a.queue.some(function(b,g){return b.type==f&&b.expectedKey==c||b.expectedType==d?("function"==typeof b.callback&&null!=e&&b.callback(e),a.queue.splice(g,1),!0):void 0})};var e=function(a){var c=a.substring(0,a.length-2);c=c.replace(/ /g,"");var d=c.split(",");return"#"+b(parseInt(d[0]))+b(parseInt(d[1]))+b(parseInt(d[2]))};return c.loaded&&c.init(),c}();